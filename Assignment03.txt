ASSIGNMENT-03

* TUPLE:
         A tuple is created by placing all the items inside the parentheses and seperated by commas.
 

    tuple = 3,4.6,"man"
    print(tuple)
    a,b,c=tuple
    print(a)
    print(b)
    print(c)
 


    Accessing tuple elements using indexing
    tuple=('m','n','b','v','c','x')
    print(tuple[0])
    print(tuple[5])
    mytuple=("kite",[8,4,6],(1,2,3))
    print(mytuple[0][3])
    print(mytuple[1][1])

* Dictionaries:
                A dictionary is an unordered collection of items.Each item of dictionary has a key/value pair.

     creating a dictionary:
                           dict={}
                           dict={1:'apple',2:'banana'}
                           dict={'name':"sneha",1:[1,2,3]}
                           dict=dic({1:'am',2:'me'})
                           dict=dic([(a,'an'),(2,'man')])

     accessing elemnets in dictionary:
                           print(dict.get('name'))


    changing & adding & removing elements from dictionary:
                         dict={1:'apple',2:'banana'}
                         dict[2]='fruit'
                         print(dict)

    methods in dictionary of python:
                                    clear(),copy(),fromkey(seq[,v]),get(key[,d]),items(),keys(),pop(key[,d]),popitem(),setdefault(key[,d]),update([other]),values()

* ASSIGNMENT OPERATORS
a = 10
b = 20
print(a+b)
print(b-a)
print(a*b)                                              
print(b/a)                                     
 print(b // a)                       
print(a**b)
#bitwise operators
x = 2
y = 3
print(x & y)
print(x | y)
print(x ^ y)
print(~y)
print(x << y)
print(x >> y)
#comparision operators
m = 20
n = 10
print(m == n)
print(m != n)
print(m <= n)
print(m >= n)
#assignmentoperators
a=10
n2=20
print((a+=10))
print((a-=5))
print((a*=2))
print((a/=2))
print((a%=2))
print((a//+4))
print((a**=4))
print((a&-2))
print(a!=1)
print((a^=10))
print((a>>=1))
print((a<<=15))
#logicaloperators
a=10
b=20
print(a and b)
print(a or b)
print(not a)                          

30
10
200
2.0
2
100000000000000000000
2
3
1
-4
16
0
False
True
False
True
20
10
False                                          
     


* Commands in shell scripting:
         cat : It is generally used to concatenate the files. It gives the output on the standard output.
         more : It is a filter for paging through text one screenful at a time
         less : It is used to viewing the files instead of opening the file.Similar to more command but it allows backward as well as forward movement
         head : Used to print the first N lines of a file. It accepts N as input and the default value of N is 10.
         tail : Used to print the last N-1 lines of a file. It accepts N as input and the default value of N is 10.
         mkdir : Used to create a directory if not already exist. It accepts directory name as input parameter.                                
         cp : This command will copy the files and directories from source path to destination path. It can copy a file/directory with new name to the destination path. It accepts source file/directory and destination file/directory
         mv : Used to move the files or directories. This commandâ€™s working is almost similar to cp command but it deletes copy of file or directory from source path
         rm : Used to remove files or directories
         touch : Used to create or update a file.
         grep : This command is used to search for the specified text in a file.
         sort : This commands is used to sort the contents of files.
         wc : Used to count the number of characters, words in a file.
         cut : Used to cut a specified part of a file
         ls : To get the list of all the files or folders.
         cd : Used to change the directory.
         du : Show disk usage.
         pwd : Show the present working directory.
         man : Used to show the manual of any command present in Linux.
         rmdir : It is used to delete a directory if it is empty.
    
*  prime numbers program without using loops:
                  def prime(n,d):
                       if n//2<d:
                          return true
                       if n%d==0:
                          return false
                       return prime(n,d+1)
                  def findprimes(n,i,result):
                      if i==n+1:
                         return result
                      if prime(i,2):
                         result.append(i)
                      return findprimes9n,i+1,result)
                 print(findprimes(100,2,[]    ))

